datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String  @id @default(cuid())
    email         String  @unique
    name          String
    password_hash String?

    Session             Session[]
    ExternalUserAccount ExternalUserAccount[]

    CertificateEmission CertificateEmission[]

    @@map("users")
}

model Session {
    token   String @id
    user_id String

    User User @relation(fields: [user_id], references: [id])

    @@map("sessions")
}

model ExternalUserAccount {
    user_id          String
    provider         String // "GOOGLE" | "GITHUB" | "FACEBOOK" | ...
    provider_user_id String

    access_token                  String
    refresh_token                 String?
    access_token_expiry_datetime  DateTime?
    refresh_token_expiry_datetime DateTime?

    User User @relation(fields: [user_id], references: [id])

    @@id([user_id, provider])
    @@unique([provider, provider_user_id])
    @@map("external_user_accounts")
}

model CertificateEmission {
    id    String @id @default(cuid())
    title String

    user_id     String
    
    User     User      @relation(fields: [user_id], references: [id])
    Template Template?

    @@map("certificate_emissions")
}

model Template {
    id String @id @default(cuid())

    drive_file_id    String?
    storage_file_url String?
    file_name        String
    input_method     String // "URL" | "GOOGLE_DRIVE" | "UPLOAD"
    file_extension   String

    certificate_emission_id String  @unique

    TemplateVariable    TemplateVariable[]
    CertificateEmission    CertificateEmission      @relation(fields: [certificate_emission_id], references: [id])

    @@map("templates")
}

model TemplateVariable {
    template_id String
    name        String

    Template Template @relation(fields: [template_id], references: [id], onDelete: Cascade)

    @@id([name, template_id])
    @@map("template_variables")
}

model Outbox {
    id         String   @id @default(cuid())
    event_type String
    payload    Json
    processed  Boolean  @default(false)
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("outbox")
}
