import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import { GoogleOAuthProvider } from '@react-oauth/google'
import { fetchUserBySessionToken } from '@/api-calls/fetch-user-by-session-token'
import { GoogleAnalytics } from './GoogleAnalytics'
import { ThemeProvider } from '@/components/ThemeProvider'

const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
})

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
})

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode
}>) {
    const data = await fetchUserBySessionToken()

    return (
        <html lang="pt-BR" suppressHydrationWarning>
            {process.env.NODE_ENV !== 'development' && process.env.GA_ID && (
                <GoogleAnalytics userId={data?.userId} />
            )}

            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                <GoogleOAuthProvider clientId={process.env.GOOGLE_CLIENT_ID!}>
                    <ThemeProvider
                        attribute="class"
                        defaultTheme="system"
                        enableSystem
                        disableTransitionOnChange
                    >
                        {children}
                    </ThemeProvider>
                </GoogleOAuthProvider>
            </body>
        </html>
    )
}
